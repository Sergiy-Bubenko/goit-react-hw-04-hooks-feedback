{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Section","title","children","Statistics","good","neutral","bad","total","positivePercentage","className","s","statistics","statisticsValue","FeedbackOptions","onLeaveFeedback","btn","type","name","onClick","Notification","message","App","useState","setGood","setNeutral","setBad","setTotal","positiveFeedback","setPositiveFeedback","countTotalFeedback","prevTotal","countPositiveFeedbackPercentage","toFixed","e","target","prevGood","prevNeutral","prevBad","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,WAAa,+BAA+B,gBAAkB,sC,iBCAhFD,EAAOC,QAAU,CAAC,IAAM,+B,iJCQTC,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,6BAAKD,IACJC,M,gBCFQ,SAASC,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,sBAAKC,UAAWC,IAAEC,WAAlB,UACE,yCACO,sBAAMF,UAAWC,IAAEE,gBAAnB,SAAqCR,OAE5C,4CACU,sBAAMK,UAAWC,IAAEE,gBAAnB,SAAqCP,OAE/C,wCACM,sBAAMI,UAAWC,IAAEE,gBAAnB,SAAqCN,OAE3C,0CACQ,sBAAMG,UAAWC,IAAEE,gBAAnB,SAAqCL,OAE7C,sDAEE,sBAAME,UAAWC,IAAEE,gBAAnB,SAAqCJ,IAFvC,U,oBCrBS,SAASK,EAAT,GAA+C,IAApBC,EAAmB,EAAnBA,gBACxC,OACE,qCACE,wBACEL,UAAWC,IAAEK,IACbC,KAAK,SACLC,KAAK,OACLC,QAASJ,EAJX,kBAQA,wBACEL,UAAWC,IAAEK,IACbC,KAAK,SACLC,KAAK,UACLC,QAASJ,EAJX,qBAQA,wBACEL,UAAWC,IAAEK,IACbC,KAAK,SACLC,KAAK,MACLC,QAASJ,EAJX,oBCrBS,SAASK,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,6BAAKA,ICOC,SAASC,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOlB,EAAP,KAAamB,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOjB,EAAP,KAAgBmB,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOhB,EAAP,KAAYmB,EAAZ,KACA,EAA0BH,mBAAS,GAAnC,mBAAOf,EAAP,KAAcmB,EAAd,KACA,EAAgDJ,mBAAS,GAAzD,mBAAOK,EAAP,KAAyBC,EAAzB,KAwBMC,EAAqB,WACzBH,GAAS,SAAAI,GAAS,OAAIA,EAAY,MAG9BC,EAAkC,WACtCH,GAAoB,kBAAQxB,EAAOG,EAAS,KAAKyB,cAGnD,OACE,sBAAKvB,UAAU,MAAf,UACE,cAAC,EAAD,CAASR,MAAM,wBAAf,SACE,cAACY,EAAD,CAAiBC,gBAjCE,SAAAmB,GACvB,OAAQA,EAAEC,OAAOjB,MACf,IAAK,OACHM,GAAQ,SAAAY,GAAQ,OAAIA,EAAW,KAC/B,MAEF,IAAK,UACHX,GAAW,SAAAY,GAAW,OAAIA,EAAc,KACxC,MAEF,IAAK,MACHX,GAAO,SAAAY,GAAO,OAAIA,EAAU,KAC5B,MAEF,QACE,OAGJR,IACAE,SAgBE,cAAC,EAAD,CAAS9B,MAAM,aAAf,SACa,IAAVM,EACC,cAACY,EAAD,CAAcC,QAAQ,sBAEtB,cAACjB,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBmB,SCtDhCW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b976ab93.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__10GSh\",\"statisticsValue\":\"Statistics_statisticsValue__1tM_2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__3pZ6v\"};","const Section = ({ title, children }) => {\n  return (\n    <section>\n      <h1>{title}</h1>\n      {children}\n    </section>\n  );\n};\n\nexport default Section;\n","import s from './Statistics.module.css';\n\nexport default function Statistics({\n  good,\n  neutral,\n  bad,\n  total,\n  positivePercentage,\n}) {\n  return (\n    <div className={s.statistics}>\n      <span>\n        Good:<span className={s.statisticsValue}>{good}</span>\n      </span>\n      <span>\n        Neutral:<span className={s.statisticsValue}>{neutral}</span>\n      </span>\n      <span>\n        Bad:<span className={s.statisticsValue}>{bad}</span>\n      </span>\n      <span>\n        Total:<span className={s.statisticsValue}>{total}</span>\n      </span>\n      <span>\n        Positive feedback:\n        <span className={s.statisticsValue}>{positivePercentage}</span>%\n      </span>\n    </div>\n  );\n}\n","import s from './FeedbackOptions.module.css';\n\nexport default function FeedbackOptions({ onLeaveFeedback }) {\n  return (\n    <>\n      <button\n        className={s.btn}\n        type=\"button\"\n        name=\"good\"\n        onClick={onLeaveFeedback}\n      >\n        Good\n      </button>\n      <button\n        className={s.btn}\n        type=\"button\"\n        name=\"neutral\"\n        onClick={onLeaveFeedback}\n      >\n        Neutral\n      </button>\n      <button\n        className={s.btn}\n        type=\"button\"\n        name=\"bad\"\n        onClick={onLeaveFeedback}\n      >\n        Bad\n      </button>\n    </>\n  );\n}\n","export default function Notification({ message }) {\n  return <h2>{message}</h2>;\n}\n\n// const Notification = ({ message }) => <h2>{message}</h2>;\n// export default Notification;\n","import { useState } from 'react';\nimport './App.css';\n\nimport Section from './components/Section/Section';\nimport Statistics from './components/Statistics/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Notification from './components/Notification/Notification';\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [positiveFeedback, setPositiveFeedback] = useState(0);\n\n  const handleGoFeedback = e => {\n    switch (e.target.name) {\n      case 'good':\n        setGood(prevGood => prevGood + 1);\n        break;\n\n      case 'neutral':\n        setNeutral(prevNeutral => prevNeutral + 1);\n        break;\n\n      case 'bad':\n        setBad(prevBad => prevBad + 1);\n        break;\n\n      default:\n        return;\n    }\n\n    countTotalFeedback();\n    countPositiveFeedbackPercentage();\n  };\n\n  const countTotalFeedback = () => {\n    setTotal(prevTotal => prevTotal + 1);\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    setPositiveFeedback(() => ((good / total) * 100).toFixed());\n  };\n\n  return (\n    <div className=\"App\">\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions onLeaveFeedback={handleGoFeedback} />\n      </Section>\n      <Section title=\"Statistics\">\n        {total === 0 ? (\n          <Notification message=\"No feedback given\" />\n        ) : (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positivePercentage={positiveFeedback}\n          />\n        )}\n      </Section>\n    </div>\n  );\n}\n\n// **************************************\n\n// import { Component } from 'react';\n\n// import './App.css';\n\n// import Section from './components/Section/Section';\n// import Statistics from './components/Statistics/Statistics';\n// import FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\n// import Notification from './components/Notification/Notification';\n\n// class App extends Component {\n//   state = {\n//     good: 0,\n//     neutral: 0,\n//     bad: 0,\n//     total: 0,\n//     positiveFeedback: 0,\n//   };\n\n//   handleGoFeedback = e => {\n//     const name = e.target.name;\n//     this.setState(prevState => {\n//       return {\n//         [name]: prevState[name] + 1,\n//       };\n//     });\n//     this.countTotalFeedback();\n//     this.countPositiveFeedbackPercentage();\n//   };\n\n//   countTotalFeedback = () => {\n//     this.setState(prevState => {\n//       return { total: prevState.total + 1 };\n//     });\n//   };\n\n//   countPositiveFeedbackPercentage = () => {\n//     this.setState(prevState => {\n//       return {\n//         positiveFeedback: ((prevState.good / prevState.total) * 100).toFixed(),\n//       };\n//     });\n//   };\n\n//   render() {\n//     const { good, neutral, bad, total, positiveFeedback } = this.state;\n//     return (\n//       <div className=\"App\">\n//         <Section title=\"Please leave feedback\">\n//           <FeedbackOptions\n//             options={this.state}\n//             onLeaveFeedback={this.handleGoFeedback}\n//           />\n//         </Section>\n//         <Section title=\"Statistics\">\n//           {total === 0 ? (\n//             <Notification message=\"No feedback given\" />\n//           ) : (\n//             <Statistics\n//               good={good}\n//               neutral={neutral}\n//               bad={bad}\n//               total={total}\n//               positivePercentage={positiveFeedback}\n//             />\n//           )}\n//         </Section>\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n"],"sourceRoot":""}